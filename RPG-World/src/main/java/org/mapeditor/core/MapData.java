//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.7
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2023.01.22 at 06:49:20 PM EST
//

package org.mapeditor.core;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.Generated;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

/**
 * The `tilewidth` and `tileheight` properties determine the<br>
 * general grid size of the map. The individual tiles may have<br>
 * different sizes. Larger tiles will extend at the top and right<br>
 * (anchored to the bottom left).<br>
 * <br>
 * A map contains three different kinds of layers. Tile layers were<br>
 * once the only type, and are simply called layer, object layers<br>
 * have the objectgroup tag and image layers use the imagelayer<br>
 * tag. The order in which these layers appear is the order in<br>
 * which the layers are rendered by Tiled.
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(
        name = "Map",
        propOrder = {"properties", "tileSets", "layers"})
@Generated(
        value = "com.sun.tools.xjc.Driver",
        comments = "JAXB RI v2.3.7",
        date = "2023-01-22T18:49:20-05:00")
public class MapData {

    /** */
    @XmlElement(required = true, type = Properties.class)
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected Properties properties;

    /** */
    @XmlElement(name = "tileset", required = true, type = TileSet.class)
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected List<TileSet> tileSets;

    /** */
    @XmlElements({
        @XmlElement(name = "layer", type = TileLayer.class),
        @XmlElement(name = "objectgroup", type = ObjectGroup.class),
        @XmlElement(name = "imagelayer", type = ImageLayer.class),
        @XmlElement(name = "group", type = Group.class)
    })
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected List<MapLayer> layers;

    /**
     * The TMX format version. Was "1.0" so far, and will be<br>
     * incremented to match minor Tiled releases.
     */
    @XmlAttribute(name = "version")
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected String version;

    /**
     * The Tiled version used to save the file.<br>
     * May be a date (for snapshot builds).<br>
     * <br>
     *
     * @since 1.0.1
     */
    @XmlAttribute(name = "tiledversion")
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected String tiledversion;

    /**
     * Map orientation. Tiled supports "orthogonal", "isometric",<br>
     * "staggered" (since 0.9) and "hexagonal" (since 0.11).
     */
    @XmlAttribute(name = "orientation", required = true)
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected Orientation orientation;

    /**
     * The order in which tiles on tile layers are rendered. Valid<br>
     * values are `right-down` (the default), `right-up`,<br>
     * `left-down` and `left-up`. In all cases, the map is drawn<br>
     * row-by-row. (since 0.10, but only supported for orthogonal<br>
     * maps at the moment)
     */
    @XmlAttribute(name = "renderorder")
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected RenderOrder renderorder;

    /** The map width in tiles. */
    @XmlAttribute(name = "width", required = true)
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected int width;

    /** The map height in tiles. */
    @XmlAttribute(name = "height", required = true)
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected int height;

    /** The width of a tile. */
    @XmlAttribute(name = "tilewidth", required = true)
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected int tileWidth;

    /** The height of a tile. */
    @XmlAttribute(name = "tileheight", required = true)
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected int tileHeight;

    /**
     * Infinite maps give you independence from bounds of the map.<br>
     * <br>
     *
     * @since 1.1
     */
    @XmlAttribute(name = "infinite")
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected Integer infinite;

    /**
     * Only for hexagonal maps. Determines the width or height<br>
     * (depending on the staggered axis) of the tile's edge, in<br>
     * pixels.
     */
    @XmlAttribute(name = "hexsidelength")
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected Integer hexSideLength;

    /**
     * For staggered and hexagonal maps, determines which axis<br>
     * ("x" or "y") is staggered.<br>
     * <br>
     *
     * @since 0.11
     */
    @XmlAttribute(name = "staggeraxis")
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected StaggerAxis staggerAxis;

    /**
     * For staggered and hexagonal maps, determines whether the<br>
     * "even" or "odd" indexes along the staggered axis are<br>
     * shifted.<br>
     * <br>
     *
     * @since 0.11
     */
    @XmlAttribute(name = "staggerindex")
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected StaggerIndex staggerIndex;

    /**
     * The background color of the map. (optional, may include<br>
     * alpha value since 0.15 in the form `#AARRGGBB`)<br>
     * <br>
     *
     * @since 0.9
     */
    @XmlAttribute(name = "backgroundcolor")
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected String backgroundcolor;

    /**
     * Stores the next available ID for new layers. This number is<br>
     * stored to prevent reuse of the same ID after layers have been<br>
     * removed.<br>
     * <br>
     *
     * @since 1.2
     */
    @XmlAttribute(name = "nextlayerid")
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected Integer nextlayerid;

    /**
     * Stores the next available ID for new objects. This number<br>
     * is stored to prevent reuse of the same ID after objects<br>
     * have been removed.<br>
     * <br>
     *
     * @since 0.11
     */
    @XmlAttribute(name = "nextobjectid")
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    protected Integer nextobjectid;

    /**
     * The background color of the map. (optional, may include<br>
     * alpha value since 0.15 in the form `#AARRGGBB`)<br>
     * <br>
     *
     * @since 0.9
     * @return possible object is {@link String }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public String getBackgroundcolor() {
        return backgroundcolor;
    }

    /** The map height in tiles. */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public int getHeight() {
        return height;
    }

    /**
     * Only for hexagonal maps. Determines the width or height<br>
     * (depending on the staggered axis) of the tile's edge, in<br>
     * pixels.
     *
     * @return possible object is {@link Integer }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public Integer getHexSideLength() {
        return hexSideLength;
    }

    /**
     * Infinite maps give you independence from bounds of the map.<br>
     * <br>
     *
     * @since 1.1
     * @return possible object is {@link Integer }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public Integer getInfinite() {
        return infinite;
    }

    /** */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public List<MapLayer> getLayers() {
        if (layers == null) {
            layers = new ArrayList<>();
        }
        return layers;
    }

    /**
     * Stores the next available ID for new layers. This number is<br>
     * stored to prevent reuse of the same ID after layers have been<br>
     * removed.<br>
     * <br>
     *
     * @since 1.2
     * @return possible object is {@link Integer }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public Integer getNextlayerid() {
        return nextlayerid;
    }

    /**
     * Stores the next available ID for new objects. This number<br>
     * is stored to prevent reuse of the same ID after objects<br>
     * have been removed.<br>
     * <br>
     *
     * @since 0.11
     * @return possible object is {@link Integer }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public Integer getNextobjectid() {
        return nextobjectid;
    }

    /**
     * Map orientation. Tiled supports "orthogonal", "isometric",<br>
     * "staggered" (since 0.9) and "hexagonal" (since 0.11).
     *
     * @return possible object is {@link Orientation }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public Orientation getOrientation() {
        return orientation;
    }

    /**
     * @return possible object is {@link PropertiesData }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public Properties getProperties() {
        return properties;
    }

    /**
     * The order in which tiles on tile layers are rendered. Valid<br>
     * values are `right-down` (the default), `right-up`,<br>
     * `left-down` and `left-up`. In all cases, the map is drawn<br>
     * row-by-row. (since 0.10, but only supported for orthogonal<br>
     * maps at the moment)
     *
     * @return possible object is {@link RenderOrder }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public RenderOrder getRenderorder() {
        if (renderorder == null) {
            return RenderOrder.RIGHT_DOWN;
        } else {
            return renderorder;
        }
    }

    /**
     * For staggered and hexagonal maps, determines which axis<br>
     * ("x" or "y") is staggered.<br>
     * <br>
     *
     * @since 0.11
     * @return possible object is {@link StaggerAxis }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public StaggerAxis getStaggerAxis() {
        return staggerAxis;
    }

    /**
     * For staggered and hexagonal maps, determines whether the<br>
     * "even" or "odd" indexes along the staggered axis are<br>
     * shifted.<br>
     * <br>
     *
     * @since 0.11
     * @return possible object is {@link StaggerIndex }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public StaggerIndex getStaggerIndex() {
        return staggerIndex;
    }

    /**
     * The Tiled version used to save the file.<br>
     * May be a date (for snapshot builds).<br>
     * <br>
     *
     * @since 1.0.1
     * @return possible object is {@link String }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public String getTiledversion() {
        return tiledversion;
    }

    /** The height of a tile. */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public int getTileHeight() {
        return tileHeight;
    }

    /** */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public List<TileSet> getTileSets() {
        if (tileSets == null) {
            tileSets = new ArrayList<>();
        }
        return tileSets;
    }

    /** The width of a tile. */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public int getTileWidth() {
        return tileWidth;
    }

    /**
     * The TMX format version. Was "1.0" so far, and will be<br>
     * incremented to match minor Tiled releases.
     *
     * @return possible object is {@link String }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public String getVersion() {
        if (version == null) {
            return "1.0";
        } else {
            return version;
        }
    }

    /** The map width in tiles. */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public int getWidth() {
        return width;
    }

    /**
     * The background color of the map. (optional, may include<br>
     * alpha value since 0.15 in the form `#AARRGGBB`)<br>
     * <br>
     *
     * @since 0.9
     * @param value allowed object is {@link String }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setBackgroundcolor(String value) {
        backgroundcolor = value;
    }

    /** The map height in tiles. */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setHeight(int value) {
        height = value;
    }

    /**
     * Only for hexagonal maps. Determines the width or height<br>
     * (depending on the staggered axis) of the tile's edge, in<br>
     * pixels.
     *
     * @param value allowed object is {@link Integer }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setHexSideLength(Integer value) {
        hexSideLength = value;
    }

    /**
     * Infinite maps give you independence from bounds of the map.<br>
     * <br>
     *
     * @since 1.1
     * @param value allowed object is {@link Integer }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setInfinite(Integer value) {
        infinite = value;
    }

    /**
     * Stores the next available ID for new layers. This number is<br>
     * stored to prevent reuse of the same ID after layers have been<br>
     * removed.<br>
     * <br>
     *
     * @since 1.2
     * @param value allowed object is {@link Integer }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setNextlayerid(Integer value) {
        nextlayerid = value;
    }

    /**
     * Stores the next available ID for new objects. This number<br>
     * is stored to prevent reuse of the same ID after objects<br>
     * have been removed.<br>
     * <br>
     *
     * @since 0.11
     * @param value allowed object is {@link Integer }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setNextobjectid(Integer value) {
        nextobjectid = value;
    }

    /**
     * Map orientation. Tiled supports "orthogonal", "isometric",<br>
     * "staggered" (since 0.9) and "hexagonal" (since 0.11).
     *
     * @param value allowed object is {@link Orientation }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setOrientation(Orientation value) {
        orientation = value;
    }

    /**
     * @param value allowed object is {@link PropertiesData }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setProperties(Properties value) {
        properties = value;
    }

    /**
     * The order in which tiles on tile layers are rendered. Valid<br>
     * values are `right-down` (the default), `right-up`,<br>
     * `left-down` and `left-up`. In all cases, the map is drawn<br>
     * row-by-row. (since 0.10, but only supported for orthogonal<br>
     * maps at the moment)
     *
     * @param value allowed object is {@link RenderOrder }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setRenderorder(RenderOrder value) {
        renderorder = value;
    }

    /**
     * For staggered and hexagonal maps, determines which axis<br>
     * ("x" or "y") is staggered.<br>
     * <br>
     *
     * @since 0.11
     * @param value allowed object is {@link StaggerAxis }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setStaggerAxis(StaggerAxis value) {
        staggerAxis = value;
    }

    /**
     * For staggered and hexagonal maps, determines whether the<br>
     * "even" or "odd" indexes along the staggered axis are<br>
     * shifted.<br>
     * <br>
     *
     * @since 0.11
     * @param value allowed object is {@link StaggerIndex }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setStaggerIndex(StaggerIndex value) {
        staggerIndex = value;
    }

    /**
     * The Tiled version used to save the file.<br>
     * May be a date (for snapshot builds).<br>
     * <br>
     *
     * @since 1.0.1
     * @param value allowed object is {@link String }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setTiledversion(String value) {
        tiledversion = value;
    }

    /** The height of a tile. */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setTileHeight(int value) {
        tileHeight = value;
    }

    /** The width of a tile. */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setTileWidth(int value) {
        tileWidth = value;
    }

    /**
     * The TMX format version. Was "1.0" so far, and will be<br>
     * incremented to match minor Tiled releases.
     *
     * @param value allowed object is {@link String }
     */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setVersion(String value) {
        version = value;
    }

    /** The map width in tiles. */
    @Generated(
            value = "com.sun.tools.xjc.Driver",
            comments = "JAXB RI v2.3.7",
            date = "2023-01-22T18:49:20-05:00")
    public void setWidth(int value) {
        width = value;
    }
}
