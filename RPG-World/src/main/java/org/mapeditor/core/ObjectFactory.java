//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.7
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2023.01.22 at 06:49:20 PM EST
//

package org.mapeditor.core;

import javax.annotation.Generated;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface
 * generated in the org.mapeditor.core package.
 *
 * <p>An ObjectFactory allows you to programatically construct new instances of the Java
 * representation for XML content. The Java representation of XML content can consist of schema
 * derived interfaces and classes representing the binding of schema type definitions, element
 * declarations and model groups. Factory methods for each of these are provided in this class.
 */
@XmlRegistry
@Generated(
        value = "com.sun.tools.xjc.Driver",
        comments = "JAXB RI v2.3.7",
        date = "2023-01-22T18:49:20-05:00")
public class ObjectFactory {

    private static final QName _Map_QNAME = new QName("http://www.mapeditor.org", "map");
    private static final QName _Template_QNAME = new QName("http://www.mapeditor.org", "template");
    private static final QName _Tileset_QNAME = new QName("http://www.mapeditor.org", "tileset");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes
     * for package: org.mapeditor.core
     */
    public ObjectFactory() {}

    /** Create an instance of {@link Animation } */
    public Animation createAnimation() {
        return new Animation();
    }

    /** Create an instance of {@link Chunk } */
    public Chunk createChunk() {
        return new Chunk();
    }

    /** Create an instance of {@link Data } */
    public Data createData() {
        return new Data();
    }

    /** Create an instance of {@link Ellipse } */
    public Ellipse createEllipse() {
        return new Ellipse();
    }

    /** Create an instance of {@link Frame } */
    public Frame createFrame() {
        return new Frame();
    }

    /** Create an instance of {@link Grid } */
    public Grid createGrid() {
        return new Grid();
    }

    /** Create an instance of {@link Group } */
    public Group createGroup() {
        return new Group();
    }

    /** Create an instance of {@link ImageData } */
    public ImageData createImageData() {
        return new ImageData();
    }

    /** Create an instance of {@link ImageLayer } */
    public ImageLayer createImageLayer() {
        return new ImageLayer();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MapData }{@code >}
     *
     * @param value Java instance representing xml element's value.
     * @return the new instance of {@link JAXBElement }{@code <}{@link MapData }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mapeditor.org", name = "map")
    public JAXBElement<MapData> createMap(MapData value) {
        return new JAXBElement<MapData>(
                ObjectFactory._Map_QNAME, ((Class) Map.class), null, ((Map) value));
    }

    /** Create an instance of {@link MapData } */
    public MapData createMapData() {
        return new Map();
    }

    /** Create an instance of {@link MapObjectData } */
    public MapObjectData createMapObjectData() {
        return new MapObject();
    }

    /** Create an instance of {@link ObjectGroupData } */
    public ObjectGroupData createObjectGroupData() {
        return new ObjectGroup();
    }

    /** Create an instance of {@link Point } */
    public Point createPoint() {
        return new Point();
    }

    /** Create an instance of {@link Polygon } */
    public Polygon createPolygon() {
        return new Polygon();
    }

    /** Create an instance of {@link Polyline } */
    public Polyline createPolyline() {
        return new Polyline();
    }

    /** Create an instance of {@link PropertiesData } */
    public PropertiesData createPropertiesData() {
        return new Properties();
    }

    /** Create an instance of {@link Property } */
    public Property createProperty() {
        return new Property();
    }

    /** Create an instance of {@link Template } */
    public Template createTemplate() {
        return new Template();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Template }{@code >}
     *
     * @param value Java instance representing xml element's value.
     * @return the new instance of {@link JAXBElement }{@code <}{@link Template }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mapeditor.org", name = "template")
    public JAXBElement<Template> createTemplate(Template value) {
        return new JAXBElement<>(ObjectFactory._Template_QNAME, Template.class, null, value);
    }

    /** Create an instance of {@link Terrain } */
    public Terrain createTerrain() {
        return new Terrain();
    }

    /** Create an instance of {@link TerrainTypes } */
    public TerrainTypes createTerrainTypes() {
        return new TerrainTypes();
    }

    /** Create an instance of {@link Text } */
    public Text createText() {
        return new Text();
    }

    /** Create an instance of {@link TileData } */
    public TileData createTileData() {
        return new Tile();
    }

    /** Create an instance of {@link TileLayerData } */
    public TileLayerData createTileLayerData() {
        return new TileLayer();
    }

    /** Create an instance of {@link TileOffset } */
    public TileOffset createTileOffset() {
        return new TileOffset();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TileSetData }{@code >}
     *
     * @param value Java instance representing xml element's value.
     * @return the new instance of {@link JAXBElement }{@code <}{@link TileSetData }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mapeditor.org", name = "tileset")
    public JAXBElement<TileSetData> createTileset(TileSetData value) {
        return new JAXBElement<TileSetData>(
                ObjectFactory._Tileset_QNAME, ((Class) TileSet.class), null, ((TileSet) value));
    }

    /** Create an instance of {@link TileSetData } */
    public TileSetData createTileSetData() {
        return new TileSet();
    }

    /** Create an instance of {@link WangCornerColor } */
    public WangCornerColor createWangCornerColor() {
        return new WangCornerColor();
    }

    /** Create an instance of {@link WangEdgeColor } */
    public WangEdgeColor createWangEdgeColor() {
        return new WangEdgeColor();
    }

    /** Create an instance of {@link WangSet } */
    public WangSet createWangSet() {
        return new WangSet();
    }

    /** Create an instance of {@link WangSets } */
    public WangSets createWangSets() {
        return new WangSets();
    }

    /** Create an instance of {@link WangTile } */
    public WangTile createWangTile() {
        return new WangTile();
    }
}
